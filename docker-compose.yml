version: "3"

services:

  traefik:
    restart: unless-stopped
    image: traefik:latest
    container_name: traefik
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy-net
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./conf/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./conf/traefik_dynamic_conf.yml:/etc/traefik/traefik_dynamic_conf.yml:ro
      - /data/cert:/etc/traefik/acme
      - /data/logs/traefik:/var/log/traefik
    ports:
     - "80:80"
     - "443:443"
    labels:
     - traefik.enable=true
     - traefik.http.routers.api_http.entrypoints=http
     - traefik.http.routers.api_http.rule=Host(`monitor.example.com`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
     - traefik.http.routers.api_http.middlewares=httpsredirect@file
     - traefik.http.routers.api.tls=true
     - traefik.http.routers.api.rule=Host(`monitor.example.com`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
     - traefik.http.routers.api.entrypoints=https
     - traefik.http.routers.api.service=api@internal
     - traefik.http.routers.api.middlewares=dashboard-auth@file
     - traefik.http.routers.api.tls.certresolver=letsencrypt_staging


  whoami:
    image: traefik/whoami:latest
    container_name: whoami
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami_route.entrypoints=https
      - traefik.http.routers.whoami_route.rule=Host(`monitor.guilhome.com`) && PathPrefix(`/whoami`)
      - traefik.http.routers.whoami_route.service=whoami_service
      - traefik.http.routers.whoami_route.tls=true
      - traefik.http.services.whoami_service.loadbalancer.server.port=80
    networks:
      - proxy-net


  crowdsec:
    image: crowdsecurity/crowdsec:latest
    container_name: crowdsec
    environment:
      GID: "${GID-1000}"
      COLLECTIONS: "crowdsecurity/linux crowdsecurity/traefik"
    depends_on:
      - traefik
    volumes:
      - /data/crowdsec/config/acquis.yaml:/etc/crowdsec/acquis.yaml
      - crowdsec-db:/var/lib/crowdsec/data/
      - crowdsec-config:/etc/crowdsec/
      - /data/logs/traefik:/var/log/traefik:ro
    networks:
      - proxy-net
    restart: unless-stopped


  bouncer-traefik:
    image: docker.io/fbonalair/traefik-crowdsec-bouncer:latest
    container_name: bouncer-traefik
    environment:
      CROWDSEC_BOUNCER_API_KEY: api-key
      CROWDSEC_AGENT_HOST: crowdsec:8080
    networks:
      - proxy-net
    depends_on:
      - crowdsec
    restart: unless-stopped


networks:
  proxy-net:
    name: proxy-net

volumes:
  crowdsec-db:
  crowdsec-config: